name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
        env:
          SHEET_SERVICE_ACCOUNT: ${{secrets.SHEET_SERVICE_ACCOUNT}}  
      - name: Restore dependencies
        run: dotnet restore
      - name: Build Project
        run: dotnet build -c Release --no-restore /p:DefineConstants=Full_Version
      - name: Build Windows files
        run: dotnet publish -r win-x64 -p:PublishSingleFile=true /p:PublishTrimmed=true /p:DebugType=None --self-contained true -c Release --no-restore /p:DefineConstants=Full_Version
      - name: Build Mac files
        run: dotnet publish -r osx-x64 -p:PublishSingleFile=true /p:PublishTrimmed=true /p:DebugType=None --self-contained true -c Release --no-restore /p:DefineConstants=Full_Version
      - name: Build Linux files
        run: dotnet publish -r linux-x64 -p:PublishSingleFile=true /p:PublishTrimmed=true /p:DebugType=None --self-contained true -c Release --no-restore /p:DefineConstants=Full_Version
      - name: Zip builds
        shell: bash
        working-directory: ${{github.workspace}}/
        run: sh ${{github.workspace}}/archiveScript.sh
      - name: Build Windows files (Teli)
        run: dotnet publish -r win-x64 -p:PublishSingleFile=true --self-contained true -c Release --no-restore  
      - name: copy files (Teli)
        shell: bash
        working-directory: ${{github.workspace}}/builds
        run: cp -a ../bin/Release/net5.0/win-x64/publish/ win-x64-teli/
      - name: zip files (Teli)
        shell: bash
        working-directory: ${{github.workspace}}/builds
        run: zip -r -j fragment-updater-win-x64-teli.zip win-x64-teli/*
      - name: remove build files (Teli)
        shell: bash
        working-directory: ${{github.workspace}}/builds
        run: rm -Rf win-x64-teli
      - name: Upload  Windows Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
            # Artifact name
          name: fragment-updater-win-x64.zip # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{github.workspace}}/builds/fragment-updater-win-x64.zip
      - name: Upload  Mac Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          # Artifact name
          name: fragment-updater-osx-x64.zip # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{github.workspace}}/builds/fragment-updater-osx-x64.zip    

      - name: Upload Linux Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          # Artifact name
          name: fragment-updater-linux-x64.zip # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{github.workspace}}/builds/fragment-updater-linux-x64.zip


      - name: Upload Windows Build Artifact (Teli)
        uses: actions/upload-artifact@v2.2.2
        with:
          # Artifact name
          name: fragment-updater-win-x64-teli.zip # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ${{github.workspace}}/builds/fragment-updater-win-x64-teli.zip

    #- name: Test
    #  run: dotnet test --no-build --verbosity normal
